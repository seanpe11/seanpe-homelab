apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-proxy-config
  namespace: networking
data:
  # This key 'proxy.conf' will be used as a filename inside the pod
  proxy.conf: |
    server {
        listen 80;
        # Default server to handle requests that don't match any other server block
        server_name _;

        # Simple health check endpoint
        location /healthz {
            return 200 "healthy\n";
        }
    }

    server {
        listen 80;

        # This is the magic: it uses a regex to capture the subdomain part
        # of any request to *.seanpe.io and stores it in a variable named $subdomain.
        # e.g., for "grafana.seanpe.io", $subdomain becomes "grafana"
        server_name ~^(?<subdomain>.+)\.seanpe\.io$;

        location / {
            # This uses the captured $subdomain variable to build the internal
            # Kubernetes DNS name of the service to forward traffic to.
            # IMPORTANT: This assumes a naming convention where your services are named
            # '<subdomain>-service' and live in the 'apps' namespace.
            proxy_pass http://$subdomain-service.apps:80;

            # These headers are important for passing client info to the backend service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
